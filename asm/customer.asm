CodeBox(lambda-checkChange,0)
    0 StartCall
    1 StartCall
    2 Dynamic(3)
    3 @DynamicVar(4,1)
    4 StartCall
    5 Dynamic(3)
    6 @DynamicVar(4,1)
    7 StartCall
    8 Dynamic(3)
    9 @DynamicVar(4,1)
   10 List(3)
   11 Dynamic(1)
   12 Ref(Key(recentlyOffered))
   13 @(1)
   14 SkipFalse(13)
   15 StartCall
   16 Dynamic(3)
   17 @DynamicVar(4,1)
   18 SetDynamic(3)
   19 Pop
   20 Dynamic(3)
   21 Dynamic(1)
   22 Term(Change,2)
   23 Int(0)
   24 Dynamic(2)
   25 Send(1)
   26 Skip(2)
   27 Null
   28 Return
CodeBox(lambda-count,4)
    0 FrameVar(1)
    1 SetPatternValues(1)
    2 Try(18,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),3)
    5 SetFrame(Tail(PatternValue(0)),2)
    6 FrameVar(3)
    7 FrameVar(0)
    8 Eql
    9 SkipFalse(7)
   10 StartCall
   11 FrameVar(0)
   12 FrameVar(2)
   13 @DynamicVar(2,2)
   14 Add1
   15 Skip(5)
   16 StartCall
   17 FrameVar(0)
   18 FrameVar(2)
   19 @DynamicVar(2,2)
   20 Skip(6)
   21 Try(3,false)
   22 IsNil
   23 Int(0)
   24 Skip(2)
   25 CaseError
   26 Return
CodeBox(behaviour-vendorGoal,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(19,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 Dynamic(2)
    5 Ref(Key(history))
    6 SetPatternValues(1)
    7 Try(9,true)
    8 IsCons(PatternValue(0))
    9 IsTerm(Head(PatternValue(0)),F,0)
   10 IsCons(Tail(PatternValue(0)))
   11 IsTerm(Head(Tail(PatternValue(0))),F,0)
   12 IsCons(Tail(Tail(PatternValue(0))))
   13 IsTerm(Head(Tail(Tail(PatternValue(0)))),F,0)
   14 StartCall
   15 @DynamicVar(0,0)
   16 Skip(5)
   17 Try(2,false)
   18 Null
   19 Skip(2)
   20 CaseError
   21 Skip(2)
   22 CaseError
   23 Return
   24 Null
   25 PopFrame
CodeBox(behaviour-empty,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(3,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 Null
    5 Skip(2)
    6 CaseError
    7 Return
    8 Null
    9 PopFrame
CodeBox(lambda-getMyGoal,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(6,true)
    3 IsCons(PatternValue(0))
    4 IsTerm(Head(PatternValue(0)),X,2)
    5 IsTerm(TermRef(Head(PatternValue(0)),0),Goal,2)
    6 SetFrame(TermRef(TermRef(Head(PatternValue(0)),0),1),1)
    7 FrameVar(1)
    8 Skip(9)
    9 Try(6,false)
   10 Str(ran out of case arms in getMyGoal)
   11 FrameVar(0)
   12 List(1)
   13 Add
   14 Error()
   15 Skip(2)
   16 CaseError
   17 Return
CodeBox(lambda-myResults,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(8,true)
    3 IsCons(PatternValue(0))
    4 IsTerm(Head(PatternValue(0)),R,2)
    5 SetFrame(TermRef(Head(PatternValue(0)),0),1)
    6 IsNil
    7 FrameVar(1)
    8 Str()
    9 Add
   10 Skip(18)
   11 Try(12,false)
   12 IsCons(PatternValue(0))
   13 IsTerm(Head(PatternValue(0)),R,2)
   14 SetFrame(TermRef(Head(PatternValue(0)),0),2)
   15 SetFrame(Tail(PatternValue(0)),1)
   16 FrameVar(2)
   17 Str(,)
   18 StartCall
   19 FrameVar(1)
   20 @DynamicVar(3,1)
   21 Add
   22 Add
   23 Skip(5)
   24 Try(2,false)
   25 Str()
   26 Skip(2)
   27 CaseError
   28 Return
CodeBox(behaviour-stupidGoal,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(13,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 StartCall
    5 Dynamic(2)
    6 @DynamicVar(3,1)
    7 SetDynamic(2)
    8 Pop
    9 Dynamic(2)
   10 Dynamic(0)
   11 Term(Change,2)
   12 Int(0)
   13 Dynamic(1)
   14 Send(1)
   15 Skip(2)
   16 CaseError
   17 Return
   18 Null
   19 PopFrame
CodeBox(lambda-getTheirGoalName,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(6,true)
    3 IsCons(PatternValue(0))
    4 IsTerm(Head(PatternValue(0)),X,2)
    5 IsTerm(TermRef(Head(PatternValue(0)),1),Goal,2)
    6 SetFrame(TermRef(TermRef(Head(PatternValue(0)),1),0),1)
    7 FrameVar(1)
    8 Skip(9)
    9 Try(6,false)
   10 Str(ran out of case arms in getTheirGoalName)
   11 FrameVar(0)
   12 List(1)
   13 Add
   14 Error()
   15 Skip(2)
   16 CaseError
   17 Return
CodeBox(lambda-empty,0)
    0 Behaviour(empty,[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],8)
    1 Return
CodeBox(lambda-simulation,8)
    0 FrameVar(0)
    1 NewDynamic()
    2 FrameVar(1)
    3 NewDynamic()
    4 FrameVar(2)
    5 NewDynamic()
    6 Null
    7 NewDynamic()
    8 Null
    9 NewDynamic()
   10 Null
   11 NewDynamic()
   12 Null
   13 NewDynamic()
   14 Fun(map0,1)
   15 SetDynamic(0)
   16 Pop
   17 StartCall
   18 Int(1)
   19 Dynamic(4)
   20 To
   21 @DynamicVar(0,1)
   22 PopDynamic
   23 SetDynamic(2)
   24 Pop
   25 Null
   26 NewDynamic()
   27 Fun(map1,1)
   28 SetDynamic(0)
   29 Pop
   30 StartCall
   31 Int(1)
   32 Dynamic(5)
   33 To
   34 @DynamicVar(0,1)
   35 PopDynamic
   36 SetDynamic(1)
   37 Pop
   38 StartCall
   39 Null
   40 NewDynamic()
   41 Fun(map2,1)
   42 SetDynamic(0)
   43 Pop
   44 StartCall
   45 Dynamic(2)
   46 @DynamicVar(0,1)
   47 PopDynamic
   48 Dynamic(15)
   49 Ref(Key(flatten))
   50 @(1)
   51 SetDynamic(0)
   52 Pop
   53 Behaviour(simulation,[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],92)
   54 PopDynamic
   55 PopDynamic
   56 PopDynamic
   57 Return
CodeBox(lambda-theirResults,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(8,true)
    3 IsCons(PatternValue(0))
    4 IsTerm(Head(PatternValue(0)),R,2)
    5 SetFrame(TermRef(Head(PatternValue(0)),1),1)
    6 IsNil
    7 FrameVar(1)
    8 Str()
    9 Add
   10 Skip(18)
   11 Try(12,false)
   12 IsCons(PatternValue(0))
   13 IsTerm(Head(PatternValue(0)),R,2)
   14 SetFrame(TermRef(Head(PatternValue(0)),1),2)
   15 SetFrame(Tail(PatternValue(0)),1)
   16 FrameVar(2)
   17 Str(,)
   18 StartCall
   19 FrameVar(1)
   20 @DynamicVar(2,1)
   21 Add
   22 Add
   23 Skip(5)
   24 Try(2,false)
   25 Str()
   26 Skip(2)
   27 CaseError
   28 Return
CodeBox(lambda-getColour,5)
    0 FrameVar(0)
    1 FrameVar(1)
    2 SetPatternValues(2)
    3 Try(4,true)
    4 IsNil
    5 SetFrame(PatternValue(1),2)
    6 Dynamic(5)
    7 Skip(27)
    8 Try(11,false)
    9 IsCons(PatternValue(0))
   10 IsTerm(Head(PatternValue(0)),Changed,2)
   11 SetFrame(TermRef(Head(PatternValue(0)),0),2)
   12 SetFrame(TermRef(Head(PatternValue(0)),1),4)
   13 SetFrame(PatternValue(1),3)
   14 FrameVar(4)
   15 FrameVar(3)
   16 Eql
   17 FailFalse
   18 FrameVar(2)
   19 Skip(15)
   20 Try(8,false)
   21 IsCons(PatternValue(0))
   22 SetFrame(Tail(PatternValue(0)),3)
   23 SetFrame(PatternValue(1),2)
   24 StartCall
   25 FrameVar(3)
   26 FrameVar(2)
   27 @DynamicVar(0,2)
   28 Skip(6)
   29 Try(3,false)
   30 Str(ran out of options for getColour)
   31 Error()
   32 Skip(2)
   33 CaseError
   34 Return
CodeBox(lambda-hasPrefix,6)
    0 FrameVar(0)
    1 FrameVar(1)
    2 SetPatternValues(2)
    3 Try(3,true)
    4 IsNil
    5 True
    6 Skip(21)
    7 Try(15,false)
    8 IsCons(PatternValue(0))
    9 SetFrame(Head(PatternValue(0)),3)
   10 SetFrame(Tail(PatternValue(0)),5)
   11 IsCons(PatternValue(1))
   12 SetFrame(Head(PatternValue(1)),4)
   13 SetFrame(Tail(PatternValue(1)),2)
   14 FrameVar(3)
   15 FrameVar(4)
   16 Eql
   17 FailFalse
   18 StartCall
   19 FrameVar(5)
   20 FrameVar(2)
   21 @DynamicVar(1,2)
   22 Skip(5)
   23 Try(2,false)
   24 False
   25 Skip(2)
   26 CaseError
   27 Return
CodeBox(lambda-fun3,0)
    0 Null
    1 Return
CodeBox(lambda-recentlyOffered,1)
    0 StartCall
    1 Dynamic(3)
    2 FrameVar(0)
    3 Dynamic(18)
    4 Ref(Key(hasPrefix))
    5 @(2)
    6 Return
CodeBox(lambda-fun2,0)
    0 StartCall
    1 @DynamicVar(0,0)
    2 Pop
    3 StartCall
    4 StartCall
    5 Dynamic(7)
    6 Fun(fun0,0)
    7 Fun(fun1,0)
    8 @DynamicVar(20,3)
    9 @(0)
   10 Return
CodeBox(lambda-fun1,0)
    0 Null
    1 Return
CodeBox(lambda-fun0,0)
    0 StartCall
    1 Dynamic(8)
    2 @DynamicVar(9,1)
    3 SetDynamic(8)
    4 Return
CodeBox(lambda-nth,4)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(15,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),3)
    5 SetFrame(Tail(PatternValue(0)),2)
    6 FrameVar(1)
    7 Is0
    8 SkipFalse(3)
    9 FrameVar(3)
   10 Skip(7)
   11 StartCall
   12 FrameVar(2)
   13 FrameVar(1)
   14 Int(1)
   15 Sub
   16 @DynamicVar(0,2)
   17 Skip(10)
   18 Try(7,false)
   19 IsNil
   20 StartCall
   21 Str(cannot find nth element: )
   22 FrameVar(1)
   23 Add
   24 @DynamicVar(7,1)
   25 Skip(2)
   26 CaseError
   27 Return
CodeBox(lambda-tryAward,4)
    0 FrameVar(0)
    1 FrameVar(1)
    2 SetPatternValues(2)
    3 Try(10,true)
    4 IsTerm(PatternValue(0),Bid,2)
    5 SetFrame(TermRef(PatternValue(0),1),2)
    6 instrs.patterns.isTrue@5b37e0d2
    7 Term(Failed,0)
    8 Int(0)
    9 FrameVar(2)
   10 Send(1)
   11 Pop
   12 True
   13 Skip(34)
   14 Try(15,false)
   15 IsTerm(PatternValue(0),Bid,2)
   16 SetFrame(TermRef(PatternValue(0),0),2)
   17 SetFrame(TermRef(PatternValue(0),1),3)
   18 instrs.patterns.IsFalse@4459eb14
   19 FrameVar(2)
   20 Dynamic(3)
   21 Eql
   22 FailFalse
   23 Term(Award,0)
   24 Int(0)
   25 FrameVar(3)
   26 Send(1)
   27 Pop
   28 True
   29 Skip(18)
   30 Try(11,false)
   31 IsTerm(PatternValue(0),Bid,2)
   32 SetFrame(TermRef(PatternValue(0),0),2)
   33 SetFrame(TermRef(PatternValue(0),1),3)
   34 instrs.patterns.IsFalse@5a2e4553
   35 Term(Failed,0)
   36 Int(0)
   37 FrameVar(3)
   38 Send(1)
   39 Pop
   40 False
   41 Skip(6)
   42 Try(3,false)
   43 Str(ran out of options for tryAward)
   44 Error()
   45 Skip(2)
   46 CaseError
   47 Return
CodeBox(lambda-bid,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(16,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),1)
    5 StartCall
    6 Dynamic(4)
    7 FrameVar(1)
    8 Ref(Key(customer))
    9 @DynamicVar(0,2)
   10 Self
   11 Term(Bid,2)
   12 Int(0)
   13 FrameVar(1)
   14 Send(1)
   15 Pop
   16 True
   17 SetDynamic(3)
   18 Skip(9)
   19 Try(6,false)
   20 Str(ran out of case arms in bid)
   21 FrameVar(0)
   22 List(1)
   23 Add
   24 Error()
   25 Skip(2)
   26 CaseError
   27 Return
CodeBox(lambda-createStupidGoal,3)
    0 StartCall
    1 FrameVar(0)
    2 FrameVar(1)
    3 FrameVar(2)
    4 @DynamicVar(4,3)
    5 New
    6 Return
CodeBox(lambda-customer,10)
    0 FrameVar(0)
    1 NewDynamic()
    2 FrameVar(1)
    3 NewDynamic()
    4 FrameVar(2)
    5 NewDynamic()
    6 FrameVar(3)
    7 NewDynamic()
    8 Null
    9 NewDynamic()
   10 Null
   11 NewDynamic()
   12 Null
   13 NewDynamic()
   14 Null
   15 NewDynamic()
   16 Null
   17 NewDynamic()
   18 Int(0)
   19 SetDynamic(4)
   20 Pop
   21 List(0)
   22 SetDynamic(3)
   23 Pop
   24 Fun(numberOf,1)
   25 SetDynamic(2)
   26 Pop
   27 Fun(recentlyOffered,1)
   28 SetDynamic(1)
   29 Pop
   30 Fun(offer,0)
   31 SetDynamic(0)
   32 Pop
   33 Behaviour(customer,[null, Key(recentlyOffered), null, Key(history), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],35)
   34 PopDynamic
   35 PopDynamic
   36 PopDynamic
   37 PopDynamic
   38 PopDynamic
   39 Return
CodeBox(lambda-flatten,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(9,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 FrameVar(2)
    7 StartCall
    8 FrameVar(1)
    9 @DynamicVar(3,1)
   10 Add
   11 Skip(6)
   12 Try(3,false)
   13 IsNil
   14 List(0)
   15 Skip(2)
   16 CaseError
   17 Return
CodeBox(lambda-opp,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(3,true)
    3 IsTerm(PatternValue(0),Red,0)
    4 Term(Green,0)
    5 Skip(10)
    6 Try(3,false)
    7 IsTerm(PatternValue(0),Green,0)
    8 Term(Red,0)
    9 Skip(6)
   10 Try(3,false)
   11 Str(ran out of options for opp)
   12 Error()
   13 Skip(2)
   14 CaseError
   15 Return
CodeBox(lambda-createNoGoal,4)
    0 Fun(empty,0)
    1 SetFrame(3)
    2 Pop
    3 StartCall
    4 @FrameVar(3,0)
    5 New
    6 Return
CodeBox(lambda-vendorGoal,5)
    0 FrameVar(0)
    1 NewDynamic()
    2 FrameVar(1)
    3 NewDynamic()
    4 FrameVar(2)
    5 NewDynamic()
    6 Null
    7 NewDynamic()
    8 Fun(checkChange,0)
    9 SetDynamic(0)
   10 Pop
   11 Behaviour(vendorGoal,[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],24)
   12 PopDynamic
   13 Return
CodeBox(behaviour-main,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(3,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 Null
    5 Skip(2)
    6 CaseError
    7 Return
    8 StartCall
    9 Int(100)
   10 @DynamicVar(19,1)
   11 Pop
   12 StartCall
   13 Int(10000)
   14 @DynamicVar(20,1)
   15 Pop
   16 StartCall
   17 Int(1000)
   18 Int(300)
   19 Int(10)
   20 Int(5)
   21 List(0)
   22 StartCall
   23 Null
   24 NewDynamic()
   25 Fun(map8,1)
   26 SetDynamic(0)
   27 Pop
   28 StartCall
   29 Dynamic(2)
   30 @DynamicVar(0,1)
   31 PopDynamic
   32 Dynamic(9)
   33 Ref(Key(flatten))
   34 @(1)
   35 @DynamicVar(2,6)
   36 New
   37 PopFrame
CodeBox(lambda-main,1)
    0 Behaviour(main,[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],8)
    1 Return
CodeBox(lambda-max,4)
    0 FrameVar(0)
    1 FrameVar(1)
    2 SetPatternValues(2)
    3 Try(8,true)
    4 SetFrame(PatternValue(0),2)
    5 SetFrame(PatternValue(1),3)
    6 FrameVar(2)
    7 FrameVar(3)
    8 Gre
    9 FailFalse
   10 FrameVar(2)
   11 Skip(11)
   12 Try(4,false)
   13 SetFrame(PatternValue(0),2)
   14 SetFrame(PatternValue(1),3)
   15 FrameVar(3)
   16 Skip(6)
   17 Try(3,false)
   18 Str(ran out of options for max)
   19 Error()
   20 Skip(2)
   21 CaseError
   22 Return
CodeBox(lambda-getMyGoalName,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(6,true)
    3 IsCons(PatternValue(0))
    4 IsTerm(Head(PatternValue(0)),X,2)
    5 IsTerm(TermRef(Head(PatternValue(0)),0),Goal,2)
    6 SetFrame(TermRef(TermRef(Head(PatternValue(0)),0),0),1)
    7 FrameVar(1)
    8 Skip(9)
    9 Try(6,false)
   10 Str(ran out of case arms in getMyGoalName)
   11 FrameVar(0)
   12 List(1)
   13 Add
   14 Error()
   15 Skip(2)
   16 CaseError
   17 Return
CodeBox(behaviour-simulation2,20)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(303,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 SetFrame(TermRef(PatternValue(0),0),1)
    5 FrameVar(1)
    6 Dynamic(19)
    7 Gre
    8 FailFalse
    9 Dynamic(20)
   10 Int(5)
   11 Gre
   12 SkipFalse(190)
   13 StartCall
   14 Dynamic(15)
   15 @DynamicVar(10,1)
   16 List(0)
   17 Eql
   18 SkipFalse(54)
   19 StartCall
   20 @DynamicVar(36,0)
   21 Pop
   22 StartCall
   23 StartCall
   24 Dynamic(15)
   25 @DynamicVar(12,1)
   26 Str( )
   27 StartCall
   28 Dynamic(15)
   29 @DynamicVar(11,1)
   30 Str(:)
   31 Add
   32 Add
   33 Add
   34 @DynamicVar(31,1)
   35 Pop
   36 StartCall
   37 StartCall
   38 Dynamic(16)
   39 StartCall
   40 Term(S,0)
   41 Dynamic(4)
   42 Ref(Key(history))
   43 Dynamic(30)
   44 Ref(Key(count))
   45 @(2)
   46 StartCall
   47 @DynamicVar(1,0)
   48 Term(R,2)
   49 List(1)
   50 Add
   51 @DynamicVar(3,1)
   52 @DynamicVar(31,1)
   53 Pop
   54 StartCall
   55 StartCall
   56 Dynamic(16)
   57 StartCall
   58 Term(S,0)
   59 Dynamic(4)
   60 Ref(Key(history))
   61 Dynamic(30)
   62 Ref(Key(count))
   63 @(2)
   64 StartCall
   65 @DynamicVar(1,0)
   66 Term(R,2)
   67 List(1)
   68 Add
   69 @DynamicVar(2,1)
   70 @DynamicVar(31,1)
   71 Skip(130)
   72 Dynamic(7)
   73 SetFrame(2)
   74 FrameVar(2)
   75 IsNil
   76 SkipTrue(14)
   77 FrameVar(2)
   78 Head
   79 SetFrame(3)
   80 Pop
   81 FrameVar(2)
   82 Tail
   83 SetFrame(2)
   84 Pop
   85 StartCall
   86 FrameVar(3)
   87 @DynamicVar(38,1)
   88 Pop
   89 Goto(74)
   90 Null
   91 Pop
   92 Dynamic(6)
   93 SetFrame(2)
   94 FrameVar(2)
   95 IsNil
   96 SkipTrue(14)
   97 FrameVar(2)
   98 Head
   99 SetFrame(3)
  100 Pop
  101 FrameVar(2)
  102 Tail
  103 SetFrame(2)
  104 Pop
  105 StartCall
  106 FrameVar(3)
  107 @DynamicVar(38,1)
  108 Pop
  109 Goto(94)
  110 Null
  111 Pop
  112 Dynamic(5)
  113 SetFrame(2)
  114 FrameVar(2)
  115 IsNil
  116 SkipTrue(14)
  117 FrameVar(2)
  118 Head
  119 SetFrame(3)
  120 Pop
  121 FrameVar(2)
  122 Tail
  123 SetFrame(2)
  124 Pop
  125 StartCall
  126 FrameVar(3)
  127 @DynamicVar(38,1)
  128 Pop
  129 Goto(114)
  130 Null
  131 Pop
  132 StartCall
  133 Dynamic(4)
  134 @DynamicVar(38,1)
  135 Pop
  136 StartCall
  137 Int(0)
  138 @DynamicVar(39,1)
  139 Pop
  140 StartCall
  141 Int(0)
  142 Dynamic(19)
  143 Dynamic(18)
  144 Dynamic(17)
  145 List(0)
  146 StartCall
  147 Dynamic(15)
  148 @DynamicVar(10,1)
  149 @DynamicVar(23,6)
  150 Become
  151 Pop
  152 StartCall
  153 StartCall
  154 Dynamic(15)
  155 @DynamicVar(12,1)
  156 Str( )
  157 StartCall
  158 Dynamic(15)
  159 @DynamicVar(11,1)
  160 Str(:)
  161 Add
  162 Add
  163 Add
  164 @DynamicVar(31,1)
  165 Pop
  166 StartCall
  167 StartCall
  168 Dynamic(16)
  169 StartCall
  170 Term(S,0)
  171 Dynamic(4)
  172 Ref(Key(history))
  173 Dynamic(30)
  174 Ref(Key(count))
  175 @(2)
  176 StartCall
  177 @DynamicVar(1,0)
  178 Term(R,2)
  179 List(1)
  180 Add
  181 @DynamicVar(3,1)
  182 @DynamicVar(31,1)
  183 Pop
  184 StartCall
  185 StartCall
  186 Dynamic(16)
  187 StartCall
  188 Term(S,0)
  189 Dynamic(4)
  190 Ref(Key(history))
  191 Dynamic(30)
  192 Ref(Key(count))
  193 @(2)
  194 StartCall
  195 @DynamicVar(1,0)
  196 Term(R,2)
  197 List(1)
  198 Add
  199 @DynamicVar(2,1)
  200 @DynamicVar(31,1)
  201 Skip(104)
  202 Dynamic(16)
  203 StartCall
  204 Term(S,0)
  205 Dynamic(4)
  206 Ref(Key(history))
  207 Dynamic(30)
  208 Ref(Key(count))
  209 @(2)
  210 StartCall
  211 @DynamicVar(1,0)
  212 Term(R,2)
  213 List(1)
  214 Add
  215 SetDynamic(16)
  216 Pop
  217 StartCall
  218 Str(restart change = )
  219 Dynamic(20)
  220 Str( )
  221 Dynamic(16)
  222 Add
  223 Add
  224 Add
  225 @DynamicVar(31,1)
  226 Pop
  227 Dynamic(7)
  228 SetFrame(2)
  229 FrameVar(2)
  230 IsNil
  231 SkipTrue(14)
  232 FrameVar(2)
  233 Head
  234 SetFrame(3)
  235 Pop
  236 FrameVar(2)
  237 Tail
  238 SetFrame(2)
  239 Pop
  240 StartCall
  241 FrameVar(3)
  242 @DynamicVar(38,1)
  243 Pop
  244 Goto(229)
  245 Null
  246 Pop
  247 Dynamic(6)
  248 SetFrame(2)
  249 FrameVar(2)
  250 IsNil
  251 SkipTrue(14)
  252 FrameVar(2)
  253 Head
  254 SetFrame(3)
  255 Pop
  256 FrameVar(2)
  257 Tail
  258 SetFrame(2)
  259 Pop
  260 StartCall
  261 FrameVar(3)
  262 @DynamicVar(38,1)
  263 Pop
  264 Goto(249)
  265 Null
  266 Pop
  267 Dynamic(5)
  268 SetFrame(2)
  269 FrameVar(2)
  270 IsNil
  271 SkipTrue(14)
  272 FrameVar(2)
  273 Head
  274 SetFrame(3)
  275 Pop
  276 FrameVar(2)
  277 Tail
  278 SetFrame(2)
  279 Pop
  280 StartCall
  281 FrameVar(3)
  282 @DynamicVar(38,1)
  283 Pop
  284 Goto(269)
  285 Null
  286 Pop
  287 StartCall
  288 Dynamic(4)
  289 @DynamicVar(38,1)
  290 Pop
  291 StartCall
  292 Int(0)
  293 @DynamicVar(39,1)
  294 Pop
  295 StartCall
  296 Dynamic(20)
  297 Add1
  298 Dynamic(19)
  299 Dynamic(18)
  300 Dynamic(17)
  301 Dynamic(16)
  302 Dynamic(15)
  303 @DynamicVar(23,6)
  304 Become
  305 Skip(6)
  306 Try(3,false)
  307 IsTerm(PatternValue(0),Time,1)
  308 Null
  309 Skip(2)
  310 CaseError
  311 Return
  312 StartCall
  313 Str(Start Simulation)
  314 @DynamicVar(31,1)
  315 PopFrame
CodeBox(lambda-createCleverGoal,3)
    0 StartCall
    1 FrameVar(0)
    2 FrameVar(1)
    3 FrameVar(2)
    4 @DynamicVar(5,3)
    5 New
    6 Return
CodeBox(lambda-stupidGoal,3)
    0 FrameVar(0)
    1 NewDynamic()
    2 FrameVar(1)
    3 NewDynamic()
    4 FrameVar(2)
    5 NewDynamic()
    6 Behaviour(stupidGoal,[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],18)
    7 Return
CodeBox(behaviour-vendor,8)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(12,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 Dynamic(12)
    5 Ref(Key(data))
    6 NotNil
    7 FailFalse
    8 StartCall
    9 StartCall
   10 Dynamic(12)
   11 Ref(Key(data))
   12 @DynamicVar(22,1)
   13 @DynamicVar(1,1)
   14 Skip(38)
   15 Try(8,false)
   16 IsTerm(PatternValue(0),Award,0)
   17 StartCall
   18 Term(S,0)
   19 @DynamicVar(2,1)
   20 Pop
   21 False
   22 SetDynamic(3)
   23 Skip(29)
   24 Try(8,false)
   25 IsTerm(PatternValue(0),Failed,0)
   26 StartCall
   27 Term(F,0)
   28 @DynamicVar(2,1)
   29 Pop
   30 False
   31 SetDynamic(3)
   32 Skip(20)
   33 Try(9,false)
   34 IsTerm(PatternValue(0),Change,2)
   35 SetFrame(TermRef(PatternValue(0),0),1)
   36 SetFrame(TermRef(PatternValue(0),1),2)
   37 StartCall
   38 FrameVar(1)
   39 FrameVar(2)
   40 Term(Changed,2)
   41 @DynamicVar(2,1)
   42 Skip(10)
   43 Try(3,false)
   44 IsTerm(PatternValue(0),Change,1)
   45 Null
   46 Skip(6)
   47 Try(3,false)
   48 IsTerm(PatternValue(0),Time,1)
   49 Null
   50 Skip(2)
   51 CaseError
   52 Return
   53 Null
   54 PopFrame
CodeBox(lambda-length,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(7,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Tail(PatternValue(0)),1)
    5 StartCall
    6 FrameVar(1)
    7 @DynamicVar(4,1)
    8 Add1
    9 Skip(32)
   10 Try(3,false)
   11 IsNil
   12 Int(0)
   13 Skip(28)
   14 Try(8,false)
   15 TryBag(0,PatternValue(0))
   16 SetFrame(BagElement(0),2)
   17 SetFrame(BagRest(0),1)
   18 StartCall
   19 FrameVar(1)
   20 @DynamicVar(4,1)
   21 Add1
   22 Skip(19)
   23 Try(3,false)
   24 IsEmptyBag
   25 Int(0)
   26 Skip(15)
   27 Try(8,false)
   28 TrySet(0,PatternValue(0))
   29 SetFrame(SetElement(0),2)
   30 SetFrame(SetRest(0),1)
   31 StartCall
   32 FrameVar(1)
   33 @DynamicVar(4,1)
   34 Add1
   35 Skip(6)
   36 Try(3,false)
   37 IsEmptySet(PatternValue(0))
   38 Int(0)
   39 Skip(2)
   40 CaseError
   41 Return
CodeBox(asm/customer.asm,17)
    0 StartCall
    1 Null
    2 NewDynamic()
    3 Fun(noticeboard,0)
    4 SetFrame(2)
    5 Pop
    6 FrameVar(2)
    7 Field(Key(noticeboard))
    8 Record(1)
    9 SetFrame(0)
   10 Pop
   11 Null
   12 NewDynamic()
   13 Null
   14 NewDynamic()
   15 Null
   16 NewDynamic()
   17 Null
   18 NewDynamic()
   19 Null
   20 NewDynamic()
   21 Null
   22 NewDynamic()
   23 Fun(remove,2)
   24 SetDynamic(5)
   25 Pop
   26 Fun(length,1)
   27 SetDynamic(4)
   28 Pop
   29 Fun(flatten,1)
   30 SetDynamic(3)
   31 Pop
   32 Fun(count,2)
   33 SetDynamic(2)
   34 Pop
   35 Fun(hasPrefix,2)
   36 SetDynamic(1)
   37 Pop
   38 Fun(nth,2)
   39 SetDynamic(0)
   40 Pop
   41 Dynamic(5)
   42 Field(Key(remove))
   43 Dynamic(4)
   44 Field(Key(length))
   45 Dynamic(3)
   46 Field(Key(flatten))
   47 Dynamic(2)
   48 Field(Key(count))
   49 Dynamic(1)
   50 Field(Key(hasPrefix))
   51 Dynamic(0)
   52 Field(Key(nth))
   53 Record(6)
   54 PopDynamic
   55 PopDynamic
   56 PopDynamic
   57 PopDynamic
   58 PopDynamic
   59 PopDynamic
   60 SetDynamic(0)
   61 Pop
   62 Null
   63 NewDynamic()
   64 Null
   65 NewDynamic()
   66 Null
   67 NewDynamic()
   68 Null
   69 NewDynamic()
   70 Null
   71 NewDynamic()
   72 Null
   73 NewDynamic()
   74 Null
   75 NewDynamic()
   76 Null
   77 NewDynamic()
   78 Null
   79 NewDynamic()
   80 Fun(customer,4)
   81 SetDynamic(8)
   82 Pop
   83 Fun(opportunity,3)
   84 SetDynamic(7)
   85 Pop
   86 StartCall
   87 FrameVar(0)
   88 Ref(Key(noticeboard))
   89 @(0)
   90 New
   91 SetDynamic(6)
   92 Pop
   93 Fun(vendorGoal,3)
   94 SetDynamic(5)
   95 Pop
   96 Fun(stupidGoal,3)
   97 SetDynamic(4)
   98 Pop
   99 Fun(vendor,1)
  100 SetDynamic(3)
  101 Pop
  102 Fun(simulation,3)
  103 SetFrame(2)
  104 Pop
  105 Fun(simulation2,6)
  106 SetDynamic(2)
  107 Pop
  108 Fun(createStupidGoal,3)
  109 SetFrame(3)
  110 Pop
  111 Fun(createNoGoal,3)
  112 SetFrame(4)
  113 Pop
  114 Fun(createCleverGoal,3)
  115 SetFrame(5)
  116 Pop
  117 Str(none)
  118 FrameVar(4)
  119 Term(Goal,2)
  120 Str(stupid)
  121 FrameVar(3)
  122 Term(Goal,2)
  123 Str(clever)
  124 FrameVar(5)
  125 Term(Goal,2)
  126 List(3)
  127 SetDynamic(1)
  128 Pop
  129 Fun(main,0)
  130 SetFrame(6)
  131 Pop
  132 Fun(opp,1)
  133 SetDynamic(0)
  134 Pop
  135 FrameVar(6)
  136 Field(Key(main))
  137 Record(1)
  138 PopDynamic
  139 PopDynamic
  140 PopDynamic
  141 PopDynamic
  142 PopDynamic
  143 PopDynamic
  144 PopDynamic
  145 PopDynamic
  146 PopDynamic
  147 SetFrame(1)
  148 Pop
  149 FrameVar(1)
  150 PopDynamic
  151 Ref(Key(main))
  152 @(0)
  153 New
  154 Return
CodeBox(lambda-vendor,10)
    0 FrameVar(0)
    1 NewDynamic()
    2 Null
    3 NewDynamic()
    4 Null
    5 NewDynamic()
    6 Null
    7 NewDynamic()
    8 Null
    9 NewDynamic()
   10 Null
   11 NewDynamic()
   12 List(0)
   13 SetDynamic(4)
   14 Pop
   15 False
   16 SetDynamic(3)
   17 Pop
   18 Fun(record,1)
   19 SetDynamic(2)
   20 Pop
   21 Fun(bid,1)
   22 SetDynamic(1)
   23 Pop
   24 Fun(getColour,2)
   25 SetDynamic(0)
   26 Pop
   27 Behaviour(vendor,[null, null, null, null, Key(history), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],53)
   28 PopDynamic
   29 PopDynamic
   30 PopDynamic
   31 PopDynamic
   32 PopDynamic
   33 Return
CodeBox(behaviour-opportunity,7)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(13,true)
    3 SetFrame(PatternValue(0),2)
    4 IsTerm(PatternValue(0),Bid,2)
    5 SetFrame(TermRef(PatternValue(0),0),1)
    6 SetFrame(TermRef(PatternValue(0),1),3)
    7 Dynamic(2)
    8 Int(0)
    9 Gre
   10 FailFalse
   11 FrameVar(2)
   12 Dynamic(1)
   13 Cons
   14 SetDynamic(1)
   15 Skip(91)
   16 Try(7,false)
   17 IsTerm(PatternValue(0),Bid,2)
   18 SetFrame(TermRef(PatternValue(0),1),1)
   19 Term(Failed,0)
   20 Int(0)
   21 FrameVar(1)
   22 Send(1)
   23 Skip(83)
   24 Try(55,false)
   25 IsTerm(PatternValue(0),Time,1)
   26 Dynamic(2)
   27 Is0
   28 Dynamic(1)
   29 NotNil
   30 And
   31 FailFalse
   32 instrs.vars.SubDynamic@28c97a5
   33 Pop
   34 False
   35 SetFrame(1)
   36 Pop
   37 StartCall
   38 Dynamic(1)
   39 @DynamicVar(21,1)
   40 SetFrame(2)
   41 FrameVar(2)
   42 IsNil
   43 SkipTrue(16)
   44 FrameVar(2)
   45 Head
   46 SetFrame(3)
   47 Pop
   48 FrameVar(2)
   49 Tail
   50 SetFrame(2)
   51 Pop
   52 StartCall
   53 FrameVar(3)
   54 FrameVar(1)
   55 @DynamicVar(0,2)
   56 SetFrame(1)
   57 Pop
   58 Goto(41)
   59 Null
   60 Pop
   61 List(0)
   62 SetDynamic(1)
   63 Pop
   64 Self
   65 Term(Remove,1)
   66 Int(0)
   67 Dynamic(11)
   68 Send(1)
   69 Pop
   70 StartCall
   71 Self
   72 @DynamicVar(22,1)
   73 Pop
   74 Dynamic(3)
   75 Term(Done,1)
   76 Int(0)
   77 Dynamic(4)
   78 Send(1)
   79 Skip(27)
   80 Try(20,false)
   81 IsTerm(PatternValue(0),Time,1)
   82 Dynamic(2)
   83 Is0
   84 FailFalse
   85 Self
   86 Term(Remove,1)
   87 Int(0)
   88 Dynamic(11)
   89 Send(1)
   90 Pop
   91 Dynamic(3)
   92 Term(Done,1)
   93 Int(0)
   94 Dynamic(4)
   95 Send(1)
   96 Pop
   97 StartCall
   98 Self
   99 @DynamicVar(22,1)
  100 Skip(6)
  101 Try(3,false)
  102 IsTerm(PatternValue(0),Time,1)
  103 instrs.vars.SubDynamic@6659c656
  104 Skip(2)
  105 CaseError
  106 Return
  107 Null
  108 PopFrame
CodeBox(behaviour-customer,7)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(16,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 Dynamic(4)
    5 Dynamic(6)
    6 Eql
    7 FailFalse
    8 Int(0)
    9 SetDynamic(4)
   10 Pop
   11 StartCall
   12 StartCall
   13 Int(90)
   14 Fun(fun2,0)
   15 Fun(fun3,0)
   16 @DynamicVar(20,3)
   17 @(0)
   18 Skip(16)
   19 Try(5,false)
   20 IsTerm(PatternValue(0),Time,1)
   21 Dynamic(4)
   22 Add1
   23 SetDynamic(4)
   24 Skip(10)
   25 Try(7,false)
   26 IsTerm(PatternValue(0),Done,1)
   27 SetFrame(TermRef(PatternValue(0),0),1)
   28 FrameVar(1)
   29 Dynamic(3)
   30 Cons
   31 SetDynamic(3)
   32 Skip(2)
   33 CaseError
   34 Return
   35 Null
   36 PopFrame
CodeBox(lambda-simulation2,26)
    0 FrameVar(0)
    1 NewDynamic()
    2 FrameVar(1)
    3 NewDynamic()
    4 FrameVar(2)
    5 NewDynamic()
    6 FrameVar(3)
    7 NewDynamic()
    8 FrameVar(4)
    9 NewDynamic()
   10 FrameVar(5)
   11 NewDynamic()
   12 Null
   13 NewDynamic()
   14 Null
   15 NewDynamic()
   16 Null
   17 NewDynamic()
   18 Null
   19 NewDynamic()
   20 Null
   21 NewDynamic()
   22 Null
   23 NewDynamic()
   24 Null
   25 NewDynamic()
   26 Null
   27 NewDynamic()
   28 Null
   29 NewDynamic()
   30 Null
   31 NewDynamic()
   32 Null
   33 NewDynamic()
   34 Null
   35 NewDynamic()
   36 Null
   37 NewDynamic()
   38 Null
   39 NewDynamic()
   40 Null
   41 NewDynamic()
   42 Fun(getMyGoal,1)
   43 SetDynamic(14)
   44 Pop
   45 Fun(getTheirGoal,1)
   46 SetDynamic(13)
   47 Pop
   48 Fun(getMyGoalName,1)
   49 SetDynamic(12)
   50 Pop
   51 Fun(getTheirGoalName,1)
   52 SetDynamic(11)
   53 Pop
   54 Fun(moreGoals,1)
   55 SetDynamic(10)
   56 Pop
   57 StartCall
   58 Dynamic(15)
   59 @DynamicVar(14,1)
   60 SetDynamic(9)
   61 Pop
   62 StartCall
   63 Dynamic(15)
   64 @DynamicVar(13,1)
   65 SetDynamic(8)
   66 Pop
   67 Null
   68 NewDynamic()
   69 Fun(map4,1)
   70 SetDynamic(0)
   71 Pop
   72 StartCall
   73 Int(1)
   74 Dynamic(18)
   75 To
   76 @DynamicVar(0,1)
   77 PopDynamic
   78 SetDynamic(7)
   79 Pop
   80 Null
   81 NewDynamic()
   82 Fun(map5,1)
   83 SetDynamic(0)
   84 Pop
   85 StartCall
   86 Int(1)
   87 Dynamic(19)
   88 To
   89 @DynamicVar(0,1)
   90 PopDynamic
   91 SetDynamic(6)
   92 Pop
   93 StartCall
   94 Null
   95 NewDynamic()
   96 Fun(map6,1)
   97 SetDynamic(0)
   98 Pop
   99 StartCall
  100 Dynamic(7)
  101 @DynamicVar(0,1)
  102 PopDynamic
  103 Dynamic(30)
  104 Ref(Key(flatten))
  105 @(1)
  106 SetDynamic(5)
  107 Pop
  108 StartCall
  109 Term(Green,0)
  110 @DynamicVar(24,1)
  111 New
  112 SetFrame(0)
  113 Pop
  114 Dynamic(7)
  115 SetFrame(1)
  116 FrameVar(1)
  117 IsNil
  118 SkipTrue(16)
  119 FrameVar(1)
  120 Head
  121 SetFrame(2)
  122 Pop
  123 FrameVar(1)
  124 Tail
  125 SetFrame(1)
  126 Pop
  127 StartCall
  128 Term(Green,0)
  129 FrameVar(0)
  130 FrameVar(2)
  131 @DynamicVar(9,3)
  132 Pop
  133 Goto(116)
  134 Null
  135 Pop
  136 FrameVar(0)
  137 SetDynamic(4)
  138 Pop
  139 Fun(myResults,1)
  140 SetDynamic(3)
  141 Pop
  142 Fun(theirResults,1)
  143 SetDynamic(2)
  144 Pop
  145 Fun(competitorSucc,0)
  146 SetDynamic(1)
  147 Pop
  148 Fun(max,2)
  149 SetDynamic(0)
  150 Pop
  151 Behaviour(simulation2,[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],312)
  152 PopDynamic
  153 PopDynamic
  154 PopDynamic
  155 PopDynamic
  156 PopDynamic
  157 PopDynamic
  158 PopDynamic
  159 PopDynamic
  160 PopDynamic
  161 PopDynamic
  162 PopDynamic
  163 PopDynamic
  164 PopDynamic
  165 PopDynamic
  166 PopDynamic
  167 Return
CodeBox(lambda-getTheirGoal,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(6,true)
    3 IsCons(PatternValue(0))
    4 IsTerm(Head(PatternValue(0)),X,2)
    5 IsTerm(TermRef(Head(PatternValue(0)),1),Goal,2)
    6 SetFrame(TermRef(TermRef(Head(PatternValue(0)),1),1),1)
    7 FrameVar(1)
    8 Skip(9)
    9 Try(6,false)
   10 Str(ran out of case arms in getTheirGoal)
   11 FrameVar(0)
   12 List(1)
   13 Add
   14 Error()
   15 Skip(2)
   16 CaseError
   17 Return
CodeBox(lambda-remove,4)
    0 FrameVar(1)
    1 SetPatternValues(1)
    2 Try(12,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),3)
    5 SetFrame(Tail(PatternValue(0)),2)
    6 FrameVar(3)
    7 FrameVar(0)
    8 Eql
    9 FailFalse
   10 StartCall
   11 FrameVar(0)
   12 FrameVar(2)
   13 @DynamicVar(5,2)
   14 Skip(17)
   15 Try(10,false)
   16 IsCons(PatternValue(0))
   17 SetFrame(Head(PatternValue(0)),3)
   18 SetFrame(Tail(PatternValue(0)),2)
   19 FrameVar(3)
   20 StartCall
   21 FrameVar(0)
   22 FrameVar(2)
   23 @DynamicVar(5,2)
   24 Cons
   25 Skip(6)
   26 Try(3,false)
   27 IsNil
   28 List(0)
   29 Skip(2)
   30 CaseError
   31 Return
CodeBox(lambda-offer,0)
    0 StartCall
    1 Self
    2 Dynamic(8)
    3 Dynamic(5)
    4 @DynamicVar(16,3)
    5 New
    6 Term(Add,1)
    7 Int(0)
    8 Dynamic(15)
    9 Send(1)
   10 Return
CodeBox(lambda-numberOf,1)
    0 StartCall
    1 FrameVar(0)
    2 Dynamic(3)
    3 Dynamic(18)
    4 Ref(Key(count))
    5 @(2)
    6 Return
CodeBox(behaviour-simulation,6)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(83,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 SetFrame(TermRef(PatternValue(0),0),1)
    5 FrameVar(1)
    6 Dynamic(5)
    7 Eql
    8 FailFalse
    9 StartCall
   10 @DynamicVar(21,0)
   11 Pop
   12 Dynamic(1)
   13 SetFrame(2)
   14 FrameVar(2)
   15 IsNil
   16 SkipTrue(41)
   17 FrameVar(2)
   18 Head
   19 SetFrame(3)
   20 Pop
   21 FrameVar(2)
   22 Tail
   23 SetFrame(2)
   24 Pop
   25 StartCall
   26 Str(Vendor: )
   27 FrameVar(3)
   28 Str( success=)
   29 StartCall
   30 Term(S,0)
   31 FrameVar(3)
   32 Ref(Key(history))
   33 Dynamic(15)
   34 Ref(Key(count))
   35 @(2)
   36 Str( fail=)
   37 StartCall
   38 Term(F,0)
   39 FrameVar(3)
   40 Ref(Key(history))
   41 Dynamic(15)
   42 Ref(Key(count))
   43 @(2)
   44 Str( history = )
   45 FrameVar(3)
   46 Ref(Key(history))
   47 Add
   48 Add
   49 Add
   50 Add
   51 Add
   52 Add
   53 Add
   54 @DynamicVar(16,1)
   55 Pop
   56 Goto(14)
   57 Null
   58 Pop
   59 Dynamic(2)
   60 SetFrame(2)
   61 FrameVar(2)
   62 IsNil
   63 SkipTrue(21)
   64 FrameVar(2)
   65 Head
   66 SetFrame(3)
   67 Pop
   68 FrameVar(2)
   69 Tail
   70 SetFrame(2)
   71 Pop
   72 StartCall
   73 Str(Customer: )
   74 FrameVar(3)
   75 Str( )
   76 FrameVar(3)
   77 Ref(Key(history))
   78 Add
   79 Add
   80 Add
   81 @DynamicVar(16,1)
   82 Pop
   83 Goto(61)
   84 Null
   85 Skip(6)
   86 Try(3,false)
   87 IsTerm(PatternValue(0),Time,1)
   88 Null
   89 Skip(2)
   90 CaseError
   91 Return
   92 StartCall
   93 Str(Start Simulation)
   94 @DynamicVar(16,1)
   95 PopFrame
CodeBox(lambda-opportunity,11)
    0 FrameVar(0)
    1 NewDynamic()
    2 FrameVar(1)
    3 NewDynamic()
    4 FrameVar(2)
    5 NewDynamic()
    6 Null
    7 NewDynamic()
    8 Null
    9 NewDynamic()
   10 List(0)
   11 SetDynamic(1)
   12 Pop
   13 Fun(tryAward,2)
   14 SetDynamic(0)
   15 Pop
   16 Behaviour(opportunity,[null, null, null, null, Key(customer), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],107)
   17 PopDynamic
   18 PopDynamic
   19 Return
CodeBox(lambda-map9,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(11,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 Dynamic(1)
    7 FrameVar(2)
    8 Term(X,2)
    9 StartCall
   10 FrameVar(1)
   11 @DynamicVar(0,1)
   12 Cons
   13 Skip(6)
   14 Try(3,false)
   15 IsNil
   16 List(0)
   17 Skip(2)
   18 CaseError
   19 Return
CodeBox(lambda-map8,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(20,true)
    3 Null
    4 NewDynamic()
    5 IsCons(PatternValue(0))
    6 SetDynamic(Head(PatternValue(0)),0)
    7 SetFrame(Tail(PatternValue(0)),1)
    8 Null
    9 NewDynamic()
   10 Fun(map9,1)
   11 SetDynamic(0)
   12 Pop
   13 StartCall
   14 Dynamic(4)
   15 @DynamicVar(0,1)
   16 PopDynamic
   17 StartCall
   18 FrameVar(1)
   19 @DynamicVar(1,1)
   20 Cons
   21 PopDynamic
   22 Skip(7)
   23 Try(4,false)
   24 PopDynamic
   25 IsNil
   26 List(0)
   27 Skip(2)
   28 CaseError
   29 Return
CodeBox(lambda-map7,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(13,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 StartCall
    7 Term(Green,0)
    8 Dynamic(1)
    9 FrameVar(2)
   10 @DynamicVar(11,3)
   11 StartCall
   12 FrameVar(1)
   13 @DynamicVar(0,1)
   14 Cons
   15 Skip(6)
   16 Try(3,false)
   17 IsNil
   18 List(0)
   19 Skip(2)
   20 CaseError
   21 Return
CodeBox(lambda-map6,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(20,true)
    3 Null
    4 NewDynamic()
    5 IsCons(PatternValue(0))
    6 SetDynamic(Head(PatternValue(0)),0)
    7 SetFrame(Tail(PatternValue(0)),1)
    8 Null
    9 NewDynamic()
   10 Fun(map7,1)
   11 SetDynamic(0)
   12 Pop
   13 StartCall
   14 Dynamic(10)
   15 @DynamicVar(0,1)
   16 PopDynamic
   17 StartCall
   18 FrameVar(1)
   19 @DynamicVar(1,1)
   20 Cons
   21 PopDynamic
   22 Skip(7)
   23 Try(4,false)
   24 PopDynamic
   25 IsNil
   26 List(0)
   27 Skip(2)
   28 CaseError
   29 Return
CodeBox(lambda-map5,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(12,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 StartCall
    7 Term(Green,0)
    8 @DynamicVar(25,1)
    9 New
   10 StartCall
   11 FrameVar(1)
   12 @DynamicVar(0,1)
   13 Cons
   14 Skip(6)
   15 Try(3,false)
   16 IsNil
   17 List(0)
   18 Skip(2)
   19 CaseError
   20 Return
CodeBox(lambda-map4,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(15,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 StartCall
    7 Term(Red,0)
    8 Dynamic(21)
    9 Int(4)
   10 Int(4)
   11 @DynamicVar(30,4)
   12 New
   13 StartCall
   14 FrameVar(1)
   15 @DynamicVar(0,1)
   16 Cons
   17 Skip(6)
   18 Try(3,false)
   19 IsNil
   20 List(0)
   21 Skip(2)
   22 CaseError
   23 Return
CodeBox(lambda-map3,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(14,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 StartCall
    7 Term(Red,0)
    8 Dynamic(1)
    9 FrameVar(2)
   10 @DynamicVar(14,3)
   11 New
   12 StartCall
   13 FrameVar(1)
   14 @DynamicVar(0,1)
   15 Cons
   16 Skip(6)
   17 Try(3,false)
   18 IsNil
   19 List(0)
   20 Skip(2)
   21 CaseError
   22 Return
CodeBox(lambda-competitorSucc,3)
    0 Int(0)
    1 SetFrame(0)
    2 Pop
    3 Dynamic(6)
    4 SetFrame(1)
    5 FrameVar(1)
    6 IsNil
    7 SkipTrue(22)
    8 FrameVar(1)
    9 Head
   10 SetFrame(2)
   11 Pop
   12 FrameVar(1)
   13 Tail
   14 SetFrame(1)
   15 Pop
   16 StartCall
   17 FrameVar(0)
   18 StartCall
   19 Term(S,0)
   20 FrameVar(2)
   21 Ref(Key(history))
   22 Dynamic(30)
   23 Ref(Key(count))
   24 @(2)
   25 @DynamicVar(0,2)
   26 SetFrame(0)
   27 Pop
   28 Goto(5)
   29 Null
   30 Pop
   31 FrameVar(0)
   32 Return
CodeBox(lambda-moreGoals,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(4,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Tail(PatternValue(0)),1)
    5 FrameVar(1)
    6 Skip(9)
    7 Try(6,false)
    8 Str(ran out of case arms in moreGoals)
    9 FrameVar(0)
   10 List(1)
   11 Add
   12 Error()
   13 Skip(2)
   14 CaseError
   15 Return
CodeBox(lambda-map2,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(20,true)
    3 Null
    4 NewDynamic()
    5 IsCons(PatternValue(0))
    6 SetDynamic(Head(PatternValue(0)),0)
    7 SetFrame(Tail(PatternValue(0)),1)
    8 Null
    9 NewDynamic()
   10 Fun(map3,1)
   11 SetDynamic(0)
   12 Pop
   13 StartCall
   14 Dynamic(5)
   15 @DynamicVar(0,1)
   16 PopDynamic
   17 StartCall
   18 FrameVar(1)
   19 @DynamicVar(1,1)
   20 Cons
   21 PopDynamic
   22 Skip(7)
   23 Try(4,false)
   24 PopDynamic
   25 IsNil
   26 List(0)
   27 Skip(2)
   28 CaseError
   29 Return
CodeBox(lambda-map1,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(12,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 StartCall
    7 Term(Red,0)
    8 @DynamicVar(10,1)
    9 New
   10 StartCall
   11 FrameVar(1)
   12 @DynamicVar(0,1)
   13 Cons
   14 Skip(6)
   15 Try(3,false)
   16 IsNil
   17 List(0)
   18 Skip(2)
   19 CaseError
   20 Return
CodeBox(behaviour-noticeboard,4)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(3,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 Null
    5 Skip(21)
    6 Try(7,false)
    7 IsTerm(PatternValue(0),Add,1)
    8 SetFrame(TermRef(PatternValue(0),0),1)
    9 FrameVar(1)
   10 Dynamic(0)
   11 Cons
   12 SetDynamic(0)
   13 Skip(13)
   14 Try(10,false)
   15 IsTerm(PatternValue(0),Remove,1)
   16 SetFrame(TermRef(PatternValue(0),0),1)
   17 StartCall
   18 FrameVar(1)
   19 Dynamic(0)
   20 Dynamic(1)
   21 Ref(Key(remove))
   22 @(2)
   23 SetDynamic(0)
   24 Skip(2)
   25 CaseError
   26 Return
   27 Null
   28 PopFrame
CodeBox(lambda-map0,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(15,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 StartCall
    7 Term(Green,0)
    8 Int(50)
    9 Int(4)
   10 Int(4)
   11 @DynamicVar(15,4)
   12 New
   13 StartCall
   14 FrameVar(1)
   15 @DynamicVar(0,1)
   16 Cons
   17 Skip(6)
   18 Try(3,false)
   19 IsNil
   20 List(0)
   21 Skip(2)
   22 CaseError
   23 Return
CodeBox(lambda-record,1)
    0 FrameVar(0)
    1 Dynamic(4)
    2 Cons
    3 SetDynamic(4)
    4 Return
CodeBox(lambda-noticeboard,3)
    0 Null
    1 NewDynamic()
    2 List(0)
    3 SetDynamic(0)
    4 Pop
    5 Behaviour(noticeboard,[Key(data), null, null, null, null, null, null, null, null, null, null, null, null],27)
    6 PopDynamic
    7 Return
