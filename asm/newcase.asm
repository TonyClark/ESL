CodeBox(lambda-test5,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(21,true)
    3 IsCons(PatternValue(0))
    4 Try(2,false)
    5 IsInt(Head(PatternValue(0)),1)
    6 Skip(14)
    7 Try(2,false)
    8 IsInt(Head(PatternValue(0)),2)
    9 Skip(9)
   10 Try(2,false)
   11 IsInt(Head(PatternValue(0)),3)
   12 Skip(4)
   13 IsInt(Head(PatternValue(0)),4)
   14 Skip(2)
   15 Fail
   16 Skip(2)
   17 Fail
   18 Skip(2)
   19 Fail
   20 StartCall
   21 Str(test5 OK)
   22 @DynamicVar(11,1)
   23 Skip(7)
   24 Try(4,false)
   25 StartCall
   26 Str(test5 fail)
   27 @DynamicVar(11,1)
   28 Skip(2)
   29 CaseError
   30 Return
CodeBox(lambda-test4,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(11,true)
    3 Null
    4 NewDynamic()
    5 Null
    6 NewDynamic()
    7 IsTerm(PatternValue(0),X,2)
    8 SetDynamic(TermRef(PatternValue(0),0),1)
    9 SetDynamic(TermRef(PatternValue(0),1),0)
   10 Fun(fun0,1)
   11 PopDynamic
   12 PopDynamic
   13 Skip(56)
   14 Try(14,false)
   15 PopDynamic
   16 PopDynamic
   17 Null
   18 NewDynamic()
   19 Null
   20 NewDynamic()
   21 IsTerm(PatternValue(0),Y,3)
   22 SetDynamic(TermRef(PatternValue(0),0),1)
   23 SetDynamic(TermRef(PatternValue(0),1),0)
   24 IsNull
   25 Fun(fun1,1)
   26 PopDynamic
   27 PopDynamic
   28 Skip(41)
   29 Try(14,false)
   30 PopDynamic
   31 PopDynamic
   32 Null
   33 NewDynamic()
   34 Null
   35 NewDynamic()
   36 IsTerm(PatternValue(0),Y,3)
   37 SetDynamic(TermRef(PatternValue(0),0),1)
   38 SetDynamic(TermRef(PatternValue(0),1),0)
   39 IsStr(TermRef(PatternValue(0),2),one)
   40 Fun(fun2,1)
   41 PopDynamic
   42 PopDynamic
   43 Skip(26)
   44 Try(17,false)
   45 PopDynamic
   46 PopDynamic
   47 Null
   48 NewDynamic()
   49 Null
   50 NewDynamic()
   51 Null
   52 NewDynamic()
   53 IsTerm(PatternValue(0),Y,3)
   54 SetDynamic(TermRef(PatternValue(0),0),2)
   55 SetDynamic(TermRef(PatternValue(0),1),1)
   56 SetDynamic(TermRef(PatternValue(0),2),0)
   57 Fun(fun3,1)
   58 PopDynamic
   59 PopDynamic
   60 PopDynamic
   61 Skip(8)
   62 Try(5,false)
   63 PopDynamic
   64 PopDynamic
   65 PopDynamic
   66 Fun(fun4,1)
   67 Skip(2)
   68 CaseError
   69 Return
CodeBox(lambda-test3,2)
    0 FrameVar(0)
    1 FrameVar(1)
    2 SetPatternValues(2)
    3 Try(6,true)
    4 IsInt(PatternValue(0),0)
    5 IsInt(PatternValue(1),0)
    6 StartCall
    7 Str(0,0)
    8 @DynamicVar(11,1)
    9 Skip(38)
   10 Try(21,false)
   11 IsInt(PatternValue(0),0)
   12 IsInt(PatternValue(1),1)
   13 FrameVar(1)
   14 FrameVar(0)
   15 SetPatternValues(2)
   16 Try(6,true)
   17 IsInt(PatternValue(0),0)
   18 IsInt(PatternValue(1),0)
   19 StartCall
   20 Str(nested 0,0)
   21 @DynamicVar(11,1)
   22 Skip(9)
   23 Try(6,false)
   24 IsInt(PatternValue(0),1)
   25 IsInt(PatternValue(1),0)
   26 StartCall
   27 Str(nested 1,0)
   28 @DynamicVar(11,1)
   29 Skip(2)
   30 CaseError
   31 Skip(16)
   32 Try(6,false)
   33 IsInt(PatternValue(0),1)
   34 IsInt(PatternValue(1),0)
   35 StartCall
   36 Str(1,0)
   37 @DynamicVar(11,1)
   38 Skip(9)
   39 Try(6,false)
   40 IsInt(PatternValue(0),1)
   41 IsInt(PatternValue(1),1)
   42 StartCall
   43 Str(1,1)
   44 @DynamicVar(11,1)
   45 Skip(2)
   46 CaseError
   47 Return
CodeBox(lambda-test2,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(9,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 FrameVar(2)
    7 StartCall
    8 FrameVar(1)
    9 @DynamicVar(8,1)
   10 Add
   11 Skip(6)
   12 Try(3,false)
   13 IsNil
   14 Int(0)
   15 Skip(2)
   16 CaseError
   17 Return
CodeBox(lambda-test1,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(5,true)
    3 IsInt(PatternValue(0),10)
    4 StartCall
    5 Str(test1 10)
    6 @DynamicVar(11,1)
    7 Skip(19)
    8 Try(5,false)
    9 IsInt(PatternValue(0),11)
   10 StartCall
   11 Str(test1 11)
   12 @DynamicVar(11,1)
   13 Skip(13)
   14 Try(5,false)
   15 IsInt(PatternValue(0),12)
   16 StartCall
   17 Str(test1 12)
   18 @DynamicVar(11,1)
   19 Skip(7)
   20 Try(4,false)
   21 StartCall
   22 Str(test1 failed)
   23 @DynamicVar(11,1)
   24 Skip(2)
   25 CaseError
   26 Return
CodeBox(lambda-f,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(5,true)
    3 IsInt(PatternValue(0),1)
    4 StartCall
    5 Str(test7: 1)
    6 @DynamicVar(11,1)
    7 Skip(17)
    8 Try(5,false)
    9 IsInt(PatternValue(0),2)
   10 StartCall
   11 Str(test7: 2)
   12 @DynamicVar(11,1)
   13 Skip(11)
   14 Try(4,false)
   15 StartCall
   16 Str(test7: rest)
   17 @DynamicVar(11,1)
   18 Skip(6)
   19 Try(3,false)
   20 Str(ran out of options for f)
   21 Error()
   22 Skip(2)
   23 CaseError
   24 Return
CodeBox(lambda-length,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(7,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Tail(PatternValue(0)),1)
    5 StartCall
    6 FrameVar(1)
    7 @DynamicVar(4,1)
    8 Add1
    9 Skip(32)
   10 Try(3,false)
   11 IsNil
   12 Int(0)
   13 Skip(28)
   14 Try(8,false)
   15 TryBag(0,PatternValue(0))
   16 SetFrame(BagElement(0),2)
   17 SetFrame(BagRest(0),1)
   18 StartCall
   19 FrameVar(1)
   20 @DynamicVar(4,1)
   21 Add1
   22 Skip(19)
   23 Try(3,false)
   24 IsEmptyBag
   25 Int(0)
   26 Skip(15)
   27 Try(8,false)
   28 TrySet(0,PatternValue(0))
   29 SetFrame(SetElement(0),2)
   30 SetFrame(SetRest(0),1)
   31 StartCall
   32 FrameVar(1)
   33 @DynamicVar(4,1)
   34 Add1
   35 Skip(6)
   36 Try(3,false)
   37 IsEmptySet(PatternValue(0))
   38 Int(0)
   39 Skip(2)
   40 CaseError
   41 Return
CodeBox(lambda-nth,4)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(15,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),3)
    5 SetFrame(Tail(PatternValue(0)),2)
    6 FrameVar(1)
    7 Is0
    8 SkipFalse(3)
    9 FrameVar(3)
   10 Skip(7)
   11 StartCall
   12 FrameVar(2)
   13 FrameVar(1)
   14 Int(1)
   15 Sub
   16 @DynamicVar(0,2)
   17 Skip(10)
   18 Try(7,false)
   19 IsNil
   20 StartCall
   21 Str(cannot find nth element: )
   22 FrameVar(1)
   23 Add
   24 @DynamicVar(7,1)
   25 Skip(2)
   26 CaseError
   27 Return
CodeBox(lambda-hasPrefix,6)
    0 FrameVar(0)
    1 FrameVar(1)
    2 SetPatternValues(2)
    3 Try(3,true)
    4 IsNil
    5 True
    6 Skip(21)
    7 Try(15,false)
    8 IsCons(PatternValue(0))
    9 SetFrame(Head(PatternValue(0)),3)
   10 SetFrame(Tail(PatternValue(0)),5)
   11 IsCons(PatternValue(1))
   12 SetFrame(Head(PatternValue(1)),4)
   13 SetFrame(Tail(PatternValue(1)),2)
   14 FrameVar(3)
   15 FrameVar(4)
   16 Eql
   17 FailFalse
   18 StartCall
   19 FrameVar(5)
   20 FrameVar(2)
   21 @DynamicVar(1,2)
   22 Skip(5)
   23 Try(2,false)
   24 False
   25 Skip(2)
   26 CaseError
   27 Return
CodeBox(behaviour-main,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(8,true)
    3 IsTerm(PatternValue(0),Time,1)
    4 SetFrame(TermRef(PatternValue(0),0),1)
    5 StartCall
    6 Str(time: )
    7 FrameVar(1)
    8 Add
    9 @DynamicVar(11,1)
   10 Skip(2)
   11 CaseError
   12 Return
   13 StartCall
   14 Int(12)
   15 @DynamicVar(9,1)
   16 Pop
   17 StartCall
   18 StartCall
   19 Int(1)
   20 Int(1000)
   21 To
   22 @DynamicVar(8,1)
   23 @DynamicVar(11,1)
   24 Pop
   25 StartCall
   26 Int(0)
   27 Int(1)
   28 @DynamicVar(7,2)
   29 Pop
   30 StartCall
   31 Int(1)
   32 Int(2)
   33 Null
   34 Term(Y,3)
   35 @DynamicVar(6,1)
   36 SetFrame(1)
   37 Pop
   38 StartCall
   39 Int(4)
   40 @FrameVar(1,1)
   41 Pop
   42 StartCall
   43 Int(3)
   44 Int(2)
   45 Int(3)
   46 List(3)
   47 @DynamicVar(5,1)
   48 Pop
   49 StartCall
   50 Int(3)
   51 @DynamicVar(0,1)
   52 Pop
   53 StartCall
   54 Int(2)
   55 @DynamicVar(4,1)
   56 Pop
   57 StartCall
   58 Int(1)
   59 Term(A,1)
   60 Int(1)
   61 Int(2)
   62 Int(3)
   63 Term(B,3)
   64 Int(4)
   65 Term(X,1)
   66 Int(9)
   67 Term(Y,1)
   68 List(4)
   69 @DynamicVar(3,1)
   70 Pop
   71 StartCall
   72 Int(10)
   73 Int(10)
   74 Int(10)
   75 Int(10)
   76 Int(10)
   77 Int(10)
   78 Int(10)
   79 Int(10)
   80 Int(10)
   81 Int(10)
   82 Int(10)
   83 Int(10)
   84 Int(10)
   85 Int(10)
   86 Int(10)
   87 Int(10)
   88 Int(10)
   89 Int(10)
   90 Int(10)
   91 Int(10)
   92 Int(10)
   93 Int(10)
   94 Int(10)
   95 Int(10)
   96 Int(10)
   97 Int(10)
   98 Int(10)
   99 Int(10)
  100 Int(10)
  101 Int(10)
  102 Int(10)
  103 Int(10)
  104 Int(10)
  105 Int(10)
  106 Int(10)
  107 Int(10)
  108 Int(10)
  109 Int(10)
  110 Int(10)
  111 Int(10)
  112 Int(10)
  113 Int(10)
  114 Int(10)
  115 Int(20)
  116 Int(30)
  117 Bag(45)
  118 @DynamicVar(2,1)
  119 Pop
  120 StartCall
  121 Int(0)
  122 Int(30)
  123 To
  124 @DynamicVar(1,1)
  125 Pop
  126 StartCall
  127 Int(1)
  128 Int(2)
  129 Int(3)
  130 Int(4)
  131 Int(5)
  132 Int(6)
  133 Int(7)
  134 Int(8)
  135 Int(9)
  136 Int(10)
  137 Int(11)
  138 Int(12)
  139 Bag(12)
  140 @DynamicVar(1,1)
  141 Pop
  142 StartCall
  143 Int(1)
  144 Int(2)
  145 Int(3)
  146 Int(1)
  147 Int(2)
  148 Int(3)
  149 Int(4)
  150 Int(4)
  151 Int(5)
  152 Int(6)
  153 Int(7)
  154 Int(8)
  155 Int(9)
  156 Int(10)
  157 Int(11)
  158 Int(12)
  159 Int(13)
  160 Int(14)
  161 Int(15)
  162 Int(16)
  163 Int(17)
  164 Int(18)
  165 Set(22)
  166 @DynamicVar(1,1)
  167 Pop
  168 StartCall
  169 @DynamicVar(16,0)
  170 PopFrame
CodeBox(lambda-test10,4)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(39,true)
    3 TryAdd(0,PatternValue(0))
    4 SetFrame(Left(0),1)
    5 TryAdd(1,Right(0))
    6 SetFrame(Left(1),2)
    7 SetFrame(Right(1),3)
    8 StartCall
    9 FrameVar(2)
   10 Dynamic(10)
   11 Ref(Key(length))
   12 @(1)
   13 Int(3)
   14 Eql
   15 StartCall
   16 FrameVar(3)
   17 Dynamic(10)
   18 Ref(Key(length))
   19 @(1)
   20 Int(3)
   21 Eql
   22 And
   23 FailFalse
   24 StartCall
   25 Str(test10: )
   26 FrameVar(1)
   27 Str( )
   28 FrameVar(2)
   29 Str( )
   30 FrameVar(3)
   31 Add
   32 Add
   33 Add
   34 Add
   35 Add
   36 @DynamicVar(11,1)
   37 Pop
   38 StartCall
   39 FrameVar(1)
   40 @DynamicVar(1,1)
   41 Skip(7)
   42 Try(4,false)
   43 StartCall
   44 Str(test10 failed)
   45 @DynamicVar(11,1)
   46 Skip(2)
   47 CaseError
   48 Return
CodeBox(lambda-flatten,3)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(9,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),2)
    5 SetFrame(Tail(PatternValue(0)),1)
    6 FrameVar(2)
    7 StartCall
    8 FrameVar(1)
    9 @DynamicVar(3,1)
   10 Add
   11 Skip(6)
   12 Try(3,false)
   13 IsNil
   14 List(0)
   15 Skip(2)
   16 CaseError
   17 Return
CodeBox(lambda-fun4,1)
    0 StartCall
    1 Str(no term)
    2 @DynamicVar(11,1)
    3 Return
CodeBox(lambda-fun3,1)
    0 StartCall
    1 Dynamic(2)
    2 Dynamic(1)
    3 Dynamic(0)
    4 FrameVar(0)
    5 Add
    6 Add
    7 Add
    8 @DynamicVar(14,1)
    9 Return
CodeBox(asm/newcase.asm,13)
    0 StartCall
    1 Null
    2 NewDynamic()
    3 Null
    4 NewDynamic()
    5 Null
    6 NewDynamic()
    7 Null
    8 NewDynamic()
    9 Null
   10 NewDynamic()
   11 Null
   12 NewDynamic()
   13 Null
   14 NewDynamic()
   15 Fun(remove,2)
   16 SetDynamic(5)
   17 Pop
   18 Fun(length,1)
   19 SetDynamic(4)
   20 Pop
   21 Fun(flatten,1)
   22 SetDynamic(3)
   23 Pop
   24 Fun(count,2)
   25 SetDynamic(2)
   26 Pop
   27 Fun(hasPrefix,2)
   28 SetDynamic(1)
   29 Pop
   30 Fun(nth,2)
   31 SetDynamic(0)
   32 Pop
   33 Dynamic(5)
   34 Field(Key(remove))
   35 Dynamic(4)
   36 Field(Key(length))
   37 Dynamic(3)
   38 Field(Key(flatten))
   39 Dynamic(2)
   40 Field(Key(count))
   41 Dynamic(1)
   42 Field(Key(hasPrefix))
   43 Dynamic(0)
   44 Field(Key(nth))
   45 Record(6)
   46 PopDynamic
   47 PopDynamic
   48 PopDynamic
   49 PopDynamic
   50 PopDynamic
   51 PopDynamic
   52 SetDynamic(0)
   53 Pop
   54 Null
   55 NewDynamic()
   56 Null
   57 NewDynamic()
   58 Null
   59 NewDynamic()
   60 Null
   61 NewDynamic()
   62 Null
   63 NewDynamic()
   64 Null
   65 NewDynamic()
   66 Null
   67 NewDynamic()
   68 Null
   69 NewDynamic()
   70 Null
   71 NewDynamic()
   72 Null
   73 NewDynamic()
   74 Fun(test1,1)
   75 SetDynamic(9)
   76 Pop
   77 Fun(test2,1)
   78 SetDynamic(8)
   79 Pop
   80 Fun(test3,2)
   81 SetDynamic(7)
   82 Pop
   83 Fun(test4,1)
   84 SetDynamic(6)
   85 Pop
   86 Fun(test5,1)
   87 SetDynamic(5)
   88 Pop
   89 Fun(test7,1)
   90 SetDynamic(4)
   91 Pop
   92 Fun(test8,1)
   93 SetDynamic(3)
   94 Pop
   95 Fun(test9,1)
   96 SetDynamic(2)
   97 Pop
   98 Fun(test10,1)
   99 SetDynamic(1)
  100 Pop
  101 Fun(main,0)
  102 SetFrame(1)
  103 Pop
  104 Fun(test6,1)
  105 SetDynamic(0)
  106 Pop
  107 FrameVar(1)
  108 Field(Key(main))
  109 Record(1)
  110 PopDynamic
  111 PopDynamic
  112 PopDynamic
  113 PopDynamic
  114 PopDynamic
  115 PopDynamic
  116 PopDynamic
  117 PopDynamic
  118 PopDynamic
  119 PopDynamic
  120 SetFrame(0)
  121 Pop
  122 FrameVar(0)
  123 PopDynamic
  124 Ref(Key(main))
  125 @(0)
  126 New
  127 Return
CodeBox(lambda-main,2)
    0 Behaviour(main,[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],13)
    1 Return
CodeBox(lambda-fun2,1)
    0 StartCall
    1 Dynamic(1)
    2 Dynamic(0)
    3 FrameVar(0)
    4 Add1
    5 Add
    6 Add
    7 @DynamicVar(13,1)
    8 Return
CodeBox(lambda-fun1,1)
    0 StartCall
    1 Dynamic(1)
    2 Dynamic(0)
    3 FrameVar(0)
    4 Add
    5 Add
    6 @DynamicVar(13,1)
    7 Return
CodeBox(lambda-count,4)
    0 FrameVar(1)
    1 SetPatternValues(1)
    2 Try(18,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),3)
    5 SetFrame(Tail(PatternValue(0)),2)
    6 FrameVar(3)
    7 FrameVar(0)
    8 Eql
    9 SkipFalse(7)
   10 StartCall
   11 FrameVar(0)
   12 FrameVar(2)
   13 @DynamicVar(2,2)
   14 Add1
   15 Skip(5)
   16 StartCall
   17 FrameVar(0)
   18 FrameVar(2)
   19 @DynamicVar(2,2)
   20 Skip(6)
   21 Try(3,false)
   22 IsNil
   23 Int(0)
   24 Skip(2)
   25 CaseError
   26 Return
CodeBox(lambda-fun0,1)
    0 StartCall
    1 Dynamic(1)
    2 Dynamic(0)
    3 FrameVar(0)
    4 Add
    5 Add
    6 @DynamicVar(13,1)
    7 Return
CodeBox(lambda-find0,2)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(9,true)
    3 IsCons(PatternValue(0))
    4 IsTerm(Head(PatternValue(0)),X,1)
    5 SetFrame(TermRef(Head(PatternValue(0)),0),1)
    6 StartCall
    7 Str(test8 )
    8 FrameVar(1)
    9 Add
   10 @DynamicVar(12,1)
   11 Skip(15)
   12 Try(6,false)
   13 IsCons(PatternValue(0))
   14 SetFrame(Tail(PatternValue(0)),1)
   15 StartCall
   16 FrameVar(1)
   17 @DynamicVar(0,1)
   18 Skip(8)
   19 Try(5,false)
   20 IsNil
   21 StartCall
   22 Str(test8 failed)
   23 @DynamicVar(12,1)
   24 Skip(2)
   25 CaseError
   26 Return
CodeBox(lambda-test9,4)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(27,true)
    3 TryBag(1,PatternValue(0))
    4 SetFrame(BagElement(1),2)
    5 TryBag(2,BagRest(1))
    6 SetFrame(BagElement(2),3)
    7 SetFrame(BagRest(2),1)
    8 FrameVar(2)
    9 Int(10)
   10 Gre
   11 FrameVar(3)
   12 Int(10)
   13 Gre
   14 And
   15 FailFalse
   16 StartCall
   17 Str(test9: )
   18 FrameVar(2)
   19 Str( )
   20 FrameVar(3)
   21 Str( )
   22 FrameVar(1)
   23 Add
   24 Add
   25 Add
   26 Add
   27 Add
   28 @DynamicVar(11,1)
   29 Skip(7)
   30 Try(4,false)
   31 StartCall
   32 Str(test9 failed)
   33 @DynamicVar(11,1)
   34 Skip(2)
   35 CaseError
   36 Return
CodeBox(lambda-test8,2)
    0 Null
    1 NewDynamic()
    2 Fun(find0,1)
    3 SetDynamic(0)
    4 Pop
    5 StartCall
    6 FrameVar(0)
    7 @DynamicVar(0,1)
    8 PopDynamic
    9 Return
CodeBox(lambda-test7,4)
    0 Fun(f,1)
    1 SetFrame(1)
    2 Pop
    3 StartCall
    4 FrameVar(0)
    5 @FrameVar(1,1)
    6 Return
CodeBox(lambda-test6,1)
    0 FrameVar(0)
    1 SetPatternValues(1)
    2 Try(5,true)
    3 IsInt(PatternValue(0),1)
    4 StartCall
    5 Str(test6: 1)
    6 @DynamicVar(11,1)
    7 Skip(17)
    8 Try(5,false)
    9 IsInt(PatternValue(0),2)
   10 StartCall
   11 Str(test6: 2)
   12 @DynamicVar(11,1)
   13 Skip(11)
   14 Try(4,false)
   15 StartCall
   16 Str(test6: rest)
   17 @DynamicVar(11,1)
   18 Skip(6)
   19 Try(3,false)
   20 Str(ran out of options for test6)
   21 Error()
   22 Skip(2)
   23 CaseError
   24 Return
CodeBox(lambda-remove,4)
    0 FrameVar(1)
    1 SetPatternValues(1)
    2 Try(12,true)
    3 IsCons(PatternValue(0))
    4 SetFrame(Head(PatternValue(0)),3)
    5 SetFrame(Tail(PatternValue(0)),2)
    6 FrameVar(3)
    7 FrameVar(0)
    8 Eql
    9 FailFalse
   10 StartCall
   11 FrameVar(0)
   12 FrameVar(2)
   13 @DynamicVar(5,2)
   14 Skip(17)
   15 Try(10,false)
   16 IsCons(PatternValue(0))
   17 SetFrame(Head(PatternValue(0)),3)
   18 SetFrame(Tail(PatternValue(0)),2)
   19 FrameVar(3)
   20 StartCall
   21 FrameVar(0)
   22 FrameVar(2)
   23 @DynamicVar(5,2)
   24 Cons
   25 Skip(6)
   26 Try(3,false)
   27 IsNil
   28 List(0)
   29 Skip(2)
   30 CaseError
   31 Return
