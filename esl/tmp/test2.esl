export main;

import 'new_esl/tmp/lists.esl';

data Test1 = B([Test1]) | C(Test2,Test2,Test3);

data Test2 = E(Test1,Test1) | F([Test2]);

data Test3 = H(Test1) | I(Test2);

type Main = Act { Time(Int); }

o::[Value(Int)] = [ Value(x+y)  | x::Int <- 0..6, y::Int <- 0..6 ];
//o::[Int] = [ x  | x::Int <- 0..10 ];

length[T](l::[T])::Int = 
  case l {
    h::T;
    t::[T];
    h:t -> 1 + length[T](t);
    [] -> 0;
  }
  
count::Int = 0;

act main::Main {
  Time(t::Int) -> { stopAll();
    for i::Int in 0..100 do {
     count := count + 1;
     length[Value(Int)](o);
    }
    print[Str]('done: ' + Value(100) + ' ' +  count + ' ' + length[Value(Int)](o));
    stopAll(); 
  }
}

