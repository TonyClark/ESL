export main;

width = 5;
height = 5;

balls = [
  Ball(White,White,random(width),random(height)),
  Ball(White,White,random(width),random(height)),
  Ball(White,White,random(width),random(height)),
  Ball(White,White,random(width),random(height)),
  Ball(White,White,random(width),random(height))
];

max(x,y) = if x > y then x else y;

min(x,y) = if x < y then x else y;

modify(value,minValue,maxValue) = max(min(value + (((random(3))+1)-2),maxValue),minValue);

subst(n,o,l) =
  case l {
    h:t ?(o=h) -> n:subst(n,o,t);
    h:t        -> h:subst(n,o,t);
    []         -> []
  };
  
act painter(colour) {
  x = random(width);
  y = random(height);
  canPaint(b) = 
    case b {
      Ball(White,c,bx,by) -> (bx=x) and (by=y) and (c<>colour);
      Ball(c,White,bx,by) -> (bx=x) and (by=y) and (c<>colour);
      _ -> false
    };
  getBall() = 
    find b ? canPaint(b) in balls do 
      b 
    else NoBall;
  move() = {
    x := modify(x,0,width);
    y := modify(y,0,height)
  }
  Time(n) -> {
    case getBall() {
      NoBall -> move();
      b=Ball(White,c,x,y) -> {
        balls := subst(Ball(colour,c,x,y),b,balls);
        move()
      };
      b=Ball(c,White,x,y) -> {
        balls := subst(Ball(c,colour,x,y),b,balls);
        move()
      }
    }
  }
};

act main {
  
  -> {
    new painter(Red);
    new painter(Green)
  };

  Time(100) -> {
    stopAll();
    print(balls)
  };

  Time(_) -> {}

}